name: ci

on:
  push:
    branches:
      - 'dev'

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Display Node.js Version
        run: node --version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker build
        run: docker build --rm=false --build-arg COMMIT_ID=$GITHUB_SHA -t ghcr.io/<Lloydmedina>/RND_market_backend .
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rnd_market_backend
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rnd_market_backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rnd_market_backend:buildcache,mode=max

      - name: Debugging Build
        run: |
          echo "Current Directory: $(pwd)"
          echo "Files in Directory: $(ls -a)"
          echo "Environment Variables: $(env)"
          npm install
          npm run build

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Rnd Market Frontend
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 22
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

            cd deployment-scripts/rnd_market/
            docker-compose pull rnd_market_backend
            docker-compose up -d rnd_market_backend
            docker-compose logs --tail 20 rnd_market_backend
