{"id":"HD60","dependencies":[{"name":"V:\\projects\\market sys\\RND_market_backend\\package.json","includedInParent":true,"mtime":1706855948155},{"name":"../config/db_connect","loc":{"line":3,"column":19,"index":90},"parent":"V:\\projects\\market sys\\RND_market_backend\\app\\controllers\\userController.js","resolved":"V:\\projects\\market sys\\RND_market_backend\\app\\config\\db_connect.js"},{"name":"../models/changepass","loc":{"line":4,"column":32,"index":148},"parent":"V:\\projects\\market sys\\RND_market_backend\\app\\controllers\\userController.js","resolved":"V:\\projects\\market sys\\RND_market_backend\\app\\models\\changepass.js"},{"name":"../models/userAccess","loc":{"line":9,"column":28,"index":323},"parent":"V:\\projects\\market sys\\RND_market_backend\\app\\controllers\\userController.js","resolved":"V:\\projects\\market sys\\RND_market_backend\\app\\models\\userAccess.js"}],"generated":{"js":"const e=require(\"express\"),r=e.Router(),n=require(\"../config/db_connect\"),s=require(\"../models/changepass\"),o=n.user,t=\"users\",a=require(\"jsonwebtoken\"),u=require(\"bcryptjs\"),c=require(\"../models/userAccess\");async function i(e,r){try{const e=`SELECT\\n    u.id,\\n    u.fullName,\\n    u.username,\\n    u.position,\\n    u.active,\\n    u.createdAt,\\n    u.default_pass,\\n    r.name as role_name,\\n    o.name as office_name,\\n    o.short_name as office_abbv\\nFROM\\n${t} u\\nLEFT JOIN\\n    role r ON u.roleId = r.id\\nLEFT JOIN\\n    office o ON u.officeId = o.id\\nWHERE\\n    u.id NOT IN ('1', '2')\\nORDER BY\\n    u.id `,o=await n.executeQuery(e);r.send(o)}catch(s){console.error(s),r.status(400).send({error:\"Server error: Error grabbing residents\"})}}async function d(e,r){try{const e=\"SELECT * FROM role\",o=await n.executeQuery(e);r.send(o)}catch(s){console.error(s),r.status(400).send({error:\"Server error: Error grabbing residents\"})}}async function l(e,r){try{const e=\"\\n    SELECT \\n  req.*, \\n  u.fullName,\\n  u.username,\\n  u.position,\\n  r.name AS role_name, \\n  o.name AS office_name\\nFROM \\n  users_request req\\nLEFT JOIN \\n  role r ON req.roleId = r.id\\nLEFT JOIN \\n  users u ON req.user_id = u.id\\n\\tLEFT JOIN \\n  office o ON u.officeId = o.id\\nORDER BY req.created_at DESC  \\n  ;\\n\\n    \",o=await n.executeQuery(e);r.send(o)}catch(s){console.error(s),r.status(400).send({error:\"Server error: Error grabbing residents\"})}}async function E(e,r){const s=e.params.uId;try{const e=`SELECT\\n    u.*,\\n    r.name as role_name,\\n    o.name as office_name,\\n    o.short_name as office_abbv\\nFROM\\n${t} u\\nLEFT JOIN\\n    role r ON u.roleId = r.id\\nLEFT JOIN\\n    office o ON u.officeId = o.id\\nWHERE\\n    u.id = ${s}\\nORDER BY\\n    u.id `,a=await n.executeQuery(e);r.send(a)}catch(o){console.error(o),r.status(400).send({error:\"Server error: Error grabbing residents\"})}}async function f(e,r){try{const e=\"\\n    SELECT a.*, b.log_title FROM logs a LEFT JOIN log_type b on a.log_type = b.log_id ORDER BY a.created_at DESC\\n    \",o=await n.executeQuery(e);r.send(o)}catch(s){console.error(s),r.status(400).send({error:\"Server error: Error grabbing residents\"})}}async function g(e,r){const o=n.filterReqJson(e.body,s),a=o.id,c=o.password;try{const e=`SELECT id FROM ${t} WHERE id = ${a}`;if(!(await n.executeQuery(e)))return r.status(404).send({message:\"User Not found.\"});{const e=await u.hash(c,10),s=`\\n      UPDATE ${t} SET password ='${e}', default_pass = 0, first_login = 0 WHERE id = ${a}`,o=await n.executeQuery(s);r.send(o)}}catch(i){console.error(i),r.status(400).send({error:\"Server error: Error grabbing user\"})}}async function y(e,r){const s=n.filterReqJson(e.body,c).id;try{console.log(s)}catch(o){console.error(o),r.status(400).send({error:\"Server error: Error grabbing user\"})}}module.exports={getAllUsers:i,getAllUsersRoles:d,getUsersRequest:l,getSyslogs:f,changePassword:g,userAccessCtrl:y,findUser:E};"},"sourceMaps":null,"error":null,"hash":"1edc3dbcb2124f993601a8a433db2d2b","cacheData":{"env":{}}}